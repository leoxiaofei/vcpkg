 CMakeLists.txt      | 24 +++++++++++++++++-------
 croncppConfig.cmake |  1 +
 2 files changed, 18 insertions(+), 7 deletions(-)

diff --git a/CMakeLists.txt b/CMakeLists.txt
index 6556ba2..8d31e17 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -1,7 +1,7 @@
 cmake_minimum_required(VERSION 3.8)
 project(
   croncpp
-  VERSION 0.0.0
+  VERSION 1.1.0
   LANGUAGES CXX)
   
 if(NOT DEFINED CXX_STD_VER)
@@ -17,21 +17,31 @@ add_library(croncpp::croncpp ALIAS croncpp)
 
 install(
   TARGETS croncpp
-  EXPORT croncpp_targets
+  EXPORT croncppConfig
   LIBRARY DESTINATION lib
   ARCHIVE DESTINATION lib
   RUNTIME DESTINATION bin
 )
 
-install(DIRECTORY include/ DESTINATION include)
+export( TARGETS croncpp NAMESPACE croncpp:: FILE croncppTargets.cmake )
+
+install(DIRECTORY include/ DESTINATION include/croncpp)
+
+set( version_config "${CMAKE_CURRENT_BINARY_DIR}/croncpp.cmake" )
+
 include(CMakePackageConfigHelpers)
-write_basic_package_version_file(croncpp.cmake COMPATIBILITY AnyNewerVersion)
+write_basic_package_version_file("${version_config}" COMPATIBILITY AnyNewerVersion)
+
+set( CONFIG_LOC "share/croncpp" )
 
 install(
-  EXPORT croncpp_targets
-  FILE croncpp.cmake
+  EXPORT croncppConfig
+  FILE croncppTargets.cmake
   NAMESPACE croncpp::
-  DESTINATION lib/cmake/croncpp)
+  DESTINATION ${CONFIG_LOC})
+install (
+  FILES croncppConfig.cmake "${version_config}"
+  DESTINATION ${CONFIG_LOC})
 
 add_library(croncpp_options INTERFACE)
 target_compile_features(croncpp_options INTERFACE ${CXX_STD_VER})
diff --git a/croncppConfig.cmake b/croncppConfig.cmake
new file mode 100644
index 0000000..597c882
--- /dev/null
+++ b/croncppConfig.cmake
@@ -0,0 +1 @@
+include( "${CMAKE_CURRENT_LIST_DIR}/croncppTargets.cmake" )
\ No newline at end of file
